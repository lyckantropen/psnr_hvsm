name: Build

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v3

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.16.2

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: "cp3{7,8,9,10,11}-*"
          CIBW_SKIP: "*-win32 *-manylinux_i686 *-musllinux*"
          CIBW_BEFORE_ALL_LINUX: bash ./linux-deps.sh
          CIBW_BEFORE_ALL_WINDOWS: pwsh ./windows-deps.ps1
          CIBW_ENVIRONMENT_WINDOWS: CC=clang CXX=clang++
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_TEST_EXTRAS: tests
          CIBW_TEST_COMMAND: "pytest {project}/tests"

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  upload_pypi:
    needs: [build_wheels]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_token }}
          repository_url: https://upload.pypi.org/legacy/